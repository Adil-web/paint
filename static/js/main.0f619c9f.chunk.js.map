{"version":3,"sources":["tools/Tool.js","tools/Brush.js","store/canvasState.js","store/toolState.js","tools/Rect.js","tools/Eraser.js","tools/Circle.js","tools/Line.js","components/Toolbar.jsx","components/SettingsBar.jsx","components/Canvas.jsx","App.jsx","index.jsx"],"names":["Tool","canvas","socket","id","this","ctx","getContext","destroyEvents","color","strokeStyle","fillColor","fillStyle","width","lineWidth","onmousemove","onmousedown","onmouseup","Brush","listen","mouseMoveHandler","bind","mouseDownHandler","mouseUpHandler","e","mouseDown","send","JSON","stringify","method","figure","type","beginPath","console","log","moveTo","pageX","target","offsetLeft","pageY","offsetTop","x","y","lineTo","stroke","sessionID","undoList","redoList","username","makeAutoObservable","data","push","length","dataUrl","pop","toDataURL","img","Image","src","onload","clearRect","height","drawImage","tool","Rect","startX","startY","saved","currentX","currentY","draw","w","h","rect","fill","Eraser","Circle","curentX","curentY","radius","Math","sqrt","r","arc","PI","Line","Toolbar","className","name","onClick","toolState","setTool","canvasState","defaultValue","onChange","setColor","value","style","marginLeft","undo","redo","SettingsBar","useState","setWidth","htmlFor","min","max","margin","setLineWidth","test","observer","canvasRef","useRef","usernameRef","modal","setModal","params","useParams","useEffect","setCanvas","current","WebSocket","setID","setSocket","onopen","onmessage","msg","parse","drawHandler","Modal","show","onHide","Header","closeButton","Title","Body","ref","Footer","Button","variant","setUsername","onMouseDown","pushToUndo","App","path","to","Date","toString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f619c9f.chunk.js","sourcesContent":["export default class Tool {\r\n    constructor(canvas, socket, id) {\r\n        this.canvas = canvas\r\n        this.socket = socket\r\n        this.id = id\r\n        this.ctx = canvas.getContext('2d')\r\n        this.destroyEvents()\r\n    }\r\n\r\n    set color(color) {\r\n        this.ctx.strokeStyle = color\r\n        this.ctx.fillColor = color\r\n        this.ctx.fillStyle = color\r\n    }\r\n    \r\n    set lineWidth(width) {\r\n        this.ctx.lineWidth = width\r\n    }\r\n\r\n    destroyEvents() {\r\n        this.canvas.onmousemove = null\r\n        this.canvas.onmousedown = null\r\n        this.canvas.onmouseup = null\r\n    }\r\n}\r\n","import Tool from './Tool';\r\n\r\nexport default class Brush extends Tool {\r\n    constructor(canvas, socket, id) {\r\n        super(canvas, socket, id)\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false\r\n        this.socket.send(JSON.stringify({\r\n            method: \"draw\",\r\n            id: this.id,\r\n            figure: {\r\n                type: \"finish\",\r\n            }\r\n        }))\r\n    }\r\n    \r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        console.log(this.ctx);\r\n        console.log(e);\r\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n    }\r\n    \r\n    mouseMoveHandler(e) {\r\n        if(this.mouseDown) {\r\n            // this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n            this.socket.send(JSON.stringify({\r\n                method: \"draw\",\r\n                id: this.id,\r\n                color: this.ctx.strokeStyle,\r\n                figure: {\r\n                    type: \"brush\",\r\n                    x: e.pageX - e.target.offsetLeft,\r\n                    y: e.pageY - e.target.offsetTop\r\n                }\r\n            }))\r\n        }\r\n    }\r\n\r\n    static draw(ctx, x, y) {\r\n        ctx.strokeStyle = ctx.strokeStyle === \"#ffffff\" ? \"#000000\" : ctx.strokeStyle  \r\n        ctx.lineTo(x, y)\r\n        ctx.stroke()\r\n    }\r\n}\r\n","import { makeAutoObservable } from \"mobx\"\r\n\r\nclass CanvasState {\r\n    canvas = null\r\n    socket = null\r\n    sessionID = null\r\n    undoList = []\r\n    redoList = []\r\n    username = \"\"\r\n    \r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setSocket(socket) {\r\n        this.socket = socket\r\n    }\r\n\r\n    setID(sessionID) {\r\n        this.sessionID = sessionID\r\n    }\r\n\r\n    setUsername(username) {\r\n        this.username = username\r\n    }\r\n\r\n    setCanvas(canvas) {\r\n        this.canvas = canvas\r\n    }\r\n\r\n    pushToUndo(data) {\r\n        this.undoList.push(data)\r\n    }\r\n\r\n    pushToRedo(data) {\r\n        this.redoList.push(data)\r\n    }\r\n\r\n    undo() {\r\n        let ctx = this.canvas.getContext('2d')\r\n        if(this.undoList.length > 1) {\r\n            let dataUrl = this.undoList.pop()\r\n            this.redoList.push(this.canvas.toDataURL())\r\n            let img = new Image()\r\n            img.src = dataUrl\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        } else {\r\n            ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n        }\r\n    }\r\n\r\n    redo() {\r\n        let ctx = this.canvas.getContext('2d')\r\n        if(this.redoList.length > 1) {\r\n            let dataUrl = this.redoList.pop()\r\n            this.undoList.push(this.canvas.toDataURL())\r\n            let img = new Image()\r\n            img.src = dataUrl\r\n            img.onload = () => {\r\n                ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n                ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default new CanvasState()\r\n","import { makeAutoObservable } from \"mobx\"\r\n\r\nclass ToolState {\r\n    tool = null\r\n    constructor() {\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    setTool(tool) {\r\n        this.tool = tool\r\n    }\r\n    \r\n    setColor(color) {\r\n        this.tool.color = color\r\n    }\r\n\r\n    setLineWidth(width) {\r\n        this.tool.lineWidth = width\r\n    }\r\n}\r\n\r\nexport default new ToolState()\r\n","import Tool from './Tool';\r\n\r\nexport default class Rect extends Tool {\r\n    constructor(canvas) {\r\n        super(canvas)\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false\r\n    }\r\n    \r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.startX = e.pageX - e.target.offsetLeft \r\n        this.startY = e.pageY - e.target.offsetTop\r\n        this.saved = this.canvas.toDataURL()\r\n    }\r\n    \r\n    mouseMoveHandler(e) {\r\n        if(this.mouseDown) {\r\n            let currentX = e.pageX - e.target.offsetLeft \r\n            let currentY = e.pageY - e.target.offsetTop\r\n            let width = currentX - this.startX\r\n            let height = currentY - this.startY\r\n\r\n            this.draw(this.startX, this.startY, width, height)\r\n        }\r\n    }\r\n\r\n    draw(x, y, w, h) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.rect(x, y, w, h)\r\n            this.ctx.fill()\r\n        }\r\n    }\r\n}\r\n","import Brush from './Brush';\r\n\r\nexport default class Eraser extends Brush {\r\n    draw(x, y) {\r\n        this.ctx.strokeStyle = \"white\"\r\n        this.ctx.lineTo(x, y)\r\n        this.ctx.stroke()\r\n    }\r\n}\r\n","import Tool from './Tool';\r\n\r\nexport default class Circle extends Tool {\r\n    constructor(canvas) {\r\n        super(canvas)\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false\r\n    }\r\n    \r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.startX = e.pageX - e.target.offsetLeft \r\n        this.startY = e.pageY - e.target.offsetTop\r\n        this.saved = this.canvas.toDataURL()\r\n    }\r\n    \r\n    mouseMoveHandler(e) {\r\n        if(this.mouseDown) {\r\n            let curentX =  e.pageX - e.target.offsetLeft\r\n            let curentY =  e.pageY - e.target.offsetTop\r\n            let width = curentX - this.startX\r\n            let height = curentY - this.startY\r\n            let radius = Math.sqrt(width**2 + height**2)\r\n\r\n            this.draw(this.startX, this.startY, radius)\r\n        }\r\n    }\r\n\r\n    draw(x, y, r) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0,0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.arc(x, y, r, 0, 2 * Math.PI)\r\n            this.ctx.fill()\r\n        }\r\n    }\r\n}\r\n","import Tool from './Tool';\r\n\r\nexport default class Line extends Tool {\r\n    constructor(canvas) {\r\n        super(canvas)\r\n        this.listen()\r\n    }\r\n\r\n    listen() {\r\n        this.canvas.onmousemove = this.mouseMoveHandler.bind(this)\r\n        this.canvas.onmousedown = this.mouseDownHandler.bind(this)\r\n        this.canvas.onmouseup = this.mouseUpHandler.bind(this)\r\n    }\r\n\r\n    mouseUpHandler(e) {\r\n        this.mouseDown = false\r\n    }\r\n    \r\n    mouseDownHandler(e) {\r\n        this.mouseDown = true\r\n        this.ctx.beginPath()\r\n        this.ctx.moveTo(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n        this.startX = e.pageX - e.target.offsetLeft\r\n        this.startY = e.pageY - e.target.offsetTop\r\n        this.saved = this.canvas.toDataURL()\r\n    }\r\n    \r\n    mouseMoveHandler(e) {\r\n        if(this.mouseDown) {\r\n            this.draw(e.pageX - e.target.offsetLeft, e.pageY - e.target.offsetTop)\r\n        }\r\n    }\r\n\r\n    draw(x, y) {\r\n        const img = new Image()\r\n        img.src = this.saved\r\n        img.onload = () => {\r\n            this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.drawImage(img, 0, 0, this.canvas.width, this.canvas.height)\r\n            this.ctx.beginPath()\r\n            this.ctx.moveTo(this.startX, this.startY)\r\n            this.ctx.lineTo(x, y)\r\n            this.ctx.stroke()\r\n        }\r\n    }\r\n}\r\n","import React from 'react'\r\nimport Brush from './../tools/Brush';\r\nimport canvasState from '../store/canvasState'\r\nimport toolState from '../store/toolState'\r\nimport Rect from './../tools/Rect';\r\nimport '../styles/toolbar.scss'\r\nimport Eraser from './../tools/Eraser';\r\nimport Circle from './../tools/Circle';\r\nimport Line from './../tools/Line';\r\n\r\nfunction Toolbar() {\r\n    return (\r\n        <div className=\"toolbar\">\r\n            <button className=\"toolbar__btn\" \r\n                    name=\"pencil\" \r\n                    onClick={() => toolState.setTool(new Brush(canvasState.canvas))}\r\n            >&#9998;</button>\r\n            <button \r\n                    className=\"toolbar__btn\" \r\n                    name=\"rectangle\"\r\n                    onClick={() => toolState.setTool(new Rect(canvasState.canvas))}\r\n            >&#9645;</button>\r\n            <button \r\n                    className=\"toolbar__btn\" \r\n                    name=\"circle\"\r\n                    onClick={() => toolState.setTool(new Circle(canvasState.canvas))}\r\n            >&#9711;</button>\r\n            <button \r\n                    className=\"toolbar__btn\" \r\n                    name=\"line\"\r\n                    onClick={() => toolState.setTool(new Line(canvasState.canvas))}\r\n            >&#9585;</button>\r\n            <button \r\n                    className=\"toolbar__btn\" \r\n                    name=\"eraser\"\r\n                    onClick={() => toolState.setTool(new Eraser(canvasState.canvas))}\r\n            >&#9963;</button>\r\n            <input \r\n                type=\"color\"\r\n                name=\"colors\"\r\n                defaultValue=\"#000000\"\r\n                onChange={e => toolState.setColor(e.target.value)} />\r\n            <button \r\n                className=\"toolbar__btn\" \r\n                name=\"undo\" \r\n                style={{marginLeft: \"auto\"}}\r\n                onClick={() => canvasState.undo()}\r\n            >&#8617;</button>\r\n            <button \r\n                className=\"toolbar__btn\" \r\n                name=\"redo\"\r\n                onClick={() => canvasState.redo()}\r\n            >&#8618;</button>\r\n            <button className=\"toolbar__btn\" name=\"save\">&#128190;</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Toolbar\r\n","import React, { useState } from 'react'\r\nimport toolState from '../store/toolState'\r\n\r\nfunction SettingsBar() {\r\n    const [width, setWidth] = useState(1)\r\n    \r\n    function test(e) {\r\n        toolState.setLineWidth(e.target.value)\r\n        setWidth(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"setting-bar\">\r\n            <label htmlFor=\"line-width\">Толщина линии: {width}</label>\r\n            <input \r\n                id=\"line-width\"\r\n                type=\"range\" \r\n                defaultValue={1}\r\n                min={1}\r\n                max={50}\r\n                style={{margin: \"0 10px\"}}\r\n                onChange={e => test(e)}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SettingsBar\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport canvasState from '../store/canvasState'\r\nimport toolState from '../store/toolState'\r\nimport Brush from '../tools/Brush'\r\nimport {Modal, Button} from \"react-bootstrap\"\r\nimport \"../styles/canvas.scss\"\r\nimport { useParams } from 'react-router'\r\n\r\nfunction Canvas() {\r\n    const canvasRef = useRef()\r\n    const usernameRef = useRef()\r\n    const [modal, setModal] = useState(true)\r\n    const params = useParams()\r\n\r\n    useEffect(() => {\r\n        canvasState.setCanvas(canvasRef.current)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(usernameRef.current.value) {\r\n            const socket = new WebSocket(\"ws://web-socks123.herokuapp.com/\")\r\n            // const socket = new WebSocket(\"ws://localhost:5000/\")\r\n            canvasState.setID(params.id)\r\n            canvasState.setSocket(socket)\r\n            toolState.setTool(new Brush(canvasRef.current, socket, params.id))\r\n            \r\n            socket.onopen = () => {\r\n                socket.send(JSON.stringify({\r\n                    id: params.id,\r\n                    username: canvasState.username,\r\n                    method: \"connection\"\r\n                }))\r\n                console.log(\"connected\");\r\n            }\r\n            socket.onmessage = (e) => {\r\n                let msg = JSON.parse(e.data)\r\n                console.log(msg)\r\n                switch (msg.method) {\r\n                    case \"connection\":\r\n                        console.log(`User ${msg.username} is connected!`)\r\n                        break;\r\n                    case \"draw\":\r\n                        drawHandler(msg)\r\n                        break\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    }, [canvasState.username])\r\n\r\n    function drawHandler(msg) {\r\n        const figure = msg.figure\r\n        const ctx = canvasRef.current.getContext('2d')\r\n        switch (figure.type) {\r\n            case \"brush\":\r\n                Brush.draw(ctx, figure.x, figure.y)\r\n                toolState.setColor(figure.color)\r\n                break;\r\n            case \"finish\":\r\n                ctx.beginPath()\r\n                break\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    \r\n    function mouseDownHandler() {\r\n        canvasState.pushToUndo(canvasRef.current.toDataURL())\r\n    }\r\n\r\n    function connectionHandler() {\r\n        canvasState.setUsername(usernameRef.current.value)\r\n        console.log(canvasState.username);\r\n        setModal(false)\r\n    }\r\n    \r\n    return (\r\n        <div className=\"canvas\">\r\n            <Modal show={modal} onHide={() => {}}>\r\n                <Modal.Header closeButton>\r\n                <Modal.Title>Введите ваше имя:</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <input type=\"text\" ref={usernameRef} />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                <Button variant=\"primary\" onClick={() => connectionHandler()}>\r\n                    Войти\r\n                </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            <canvas \r\n                onMouseDown={() => mouseDownHandler()}\r\n                ref={canvasRef} \r\n                width={1000} \r\n                height={500} \r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default observer(Canvas)\r\n","import Toolbar from './components/Toolbar'\nimport SettingsBar from './components/SettingsBar';\nimport Canvas from './components/Canvas';\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom';\nimport './styles/app.scss'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"app\">\n        <Switch>\n          <Route path=\"/:id\">\n            <Toolbar/>\n            <SettingsBar/>\n            <Canvas/>\n          </Route>\n          <Redirect to={`${(+new Date()).toString(16)}`} />\n        </Switch>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}